package model

import (
	"fmt"
)

type Reflector uint

const (
	A Reflector = iota
	B
	C
)

func NewReflector(code string) (Reflector, error) {
	switch code {
	case "A":
		return A, nil
	case "B":
		return B, nil
	case "C":
		return C, nil
	default:
		return 0, fmt.Errorf("invalid reflector %s", code)
	}
}

var reflectorEncodingValues = []string{
	"ZYXWVUTSRQPONMLKJIHGFEDCBA",
	"YRUHQSLDPXNGOKMIEBFZCWVJAT",
	"FVPJIAOYEDRZXWGCTKUQSBNMHL",
}

func (r Reflector) encoding() string {
	return reflectorEncodingValues[r]
}

var reflectorForwardWiringValues = [][]uint{
	{0x19, 0x18, 0x17, 0x16, 0x15, 0x14, 0x13, 0x12, 0x11, 0x10, 0xf, 0xe, 0xd, 0xc, 0xb, 0xa, 0x9, 0x8, 0x7, 0x6, 0x5, 0x4, 0x3, 0x2, 0x1, 0x0},
	{0x18, 0x11, 0x14, 0x7, 0x10, 0x12, 0xb, 0x3, 0xf, 0x17, 0xd, 0x6, 0xe, 0xa, 0xc, 0x8, 0x4, 0x1, 0x5, 0x19, 0x2, 0x16, 0x15, 0x9, 0x0, 0x13},
	{0x5, 0x15, 0xf, 0x9, 0x8, 0x0, 0xe, 0x18, 0x4, 0x3, 0x11, 0x19, 0x17, 0x16, 0x6, 0x2, 0x13, 0xa, 0x14, 0x10, 0x12, 0x1, 0xd, 0xc, 0x7, 0xb},
}

func (r Reflector) ForwardWiring() []uint {
	return reflectorForwardWiringValues[r]
}

var reflectorInverseWiringValues = [][]uint{
	{0x19, 0x18, 0x17, 0x16, 0x15, 0x14, 0x13, 0x12, 0x11, 0x10, 0xf, 0xe, 0xd, 0xc, 0xb, 0xa, 0x9, 0x8, 0x7, 0x6, 0x5, 0x4, 0x3, 0x2, 0x1, 0x0},
	{0x18, 0x11, 0x14, 0x7, 0x10, 0x12, 0xb, 0x3, 0xf, 0x17, 0xd, 0x6, 0xe, 0xa, 0xc, 0x8, 0x4, 0x1, 0x5, 0x19, 0x2, 0x16, 0x15, 0x9, 0x0, 0x13},
	{0x5, 0x15, 0xf, 0x9, 0x8, 0x0, 0xe, 0x18, 0x4, 0x3, 0x11, 0x19, 0x17, 0x16, 0x6, 0x2, 0x13, 0xa, 0x14, 0x10, 0x12, 0x1, 0xd, 0xc, 0x7, 0xb},
}

func (r Reflector) InverseWiring() []uint {
	return reflectorInverseWiringValues[r]
}
